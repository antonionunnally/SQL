-- How many emergency encounters did we have in 2019? 
SELECT COUNT(*) AS ER_VOLUMES
FROM HEALTHCARE.ENCOUNTERS
WHERE START>='2019-01-01'
AND START<'2020-01-01'
AND ENCOUNTERCLASS='emergency';


-- What conditions were treated in those encounters?
SELECT CON.DESCRIPTION
,COUNT(*) AS CONDITION_VOLUMES
FROM HEALTHCARE.ENCOUNTERS ENC
LEFT JOIN HEALTHCARE.CONDITIONS CON ON ENC.ID=CON.ENCOUNTER
WHERE ENC.START>='2019-01-01'
AND ENC.START<'2020-01-01'
AND ENC.ENCOUNTERCLASS='emergency'
GROUP BY CON.DESCRIPTION;

SELECT *
FROM HEALTHCARE.ENCOUNTERS ENC
LEFT JOIN HEALTHCARE.CONDITIONS CON ON ENC.ID=CON.ENCOUNTER
WHERE ENC.START>='2019-01-01'
AND ENC.START<'2020-01-01'
AND ENC.ENCOUNTERCLASS='emergency'

;

-- What was the emergency throughput and how did that vary by condition treated?

SELECT 
THROUGHPUT.DESCRIPTION
,AVG(THROUGHPUT_IN_MIN) AS THR_AVG

FROM (
				-- this is an example of using an inner query, the logic below defines a 'table' we can reference in the query similar to what we've done previously
				SELECT ENC.ID
                ,CON.DESCRIPTION
				,TIMESTAMPDIFF(MINUTE,ENC.START,ENC.STOP) THROUGHPUT_IN_MIN
				FROM HEALTHCARE.ENCOUNTERS ENC
				LEFT JOIN HEALTHCARE.CONDITIONS CON ON ENC.ID=CON.ENCOUNTER
				WHERE ENC.START>='2019-01-01'
				AND ENC.START<'2020-01-01'
				AND ENC.ENCOUNTERCLASS='emergency'
                
			) THROUGHPUT
            
            GROUP BY THROUGHPUT.DESCRIPTION
